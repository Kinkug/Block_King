local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- üé® RARITY COLORS
local RARITY_COLORS = {
    ["Common"] = Color3.fromRGB(200, 200, 200),
    ["Uncommon"] = Color3.fromRGB(86, 176, 62),
    ["Rare"] = Color3.fromRGB(0, 162, 255),
    ["Epic"] = Color3.fromRGB(170, 85, 255),
    ["Legendary"] = Color3.fromRGB(255, 170, 0),
    ["Omega"] = Color3.fromRGB(255, 75, 75),
}

-- üóÉÔ∏è WEAPON DATABASE
local WeaponDB = {}

local function registerItems(folder)
    for _, tool in ipairs(folder:GetChildren()) do
        local handle = tool:FindFirstChild("Handle")
        local meshId
        if handle then
            local mesh = handle:FindFirstChildOfClass("SpecialMesh")
            if mesh then
                meshId = mesh.MeshId
            elseif handle:IsA("MeshPart") then
                meshId = handle.MeshId
            end
        end

        if meshId then
            WeaponDB[meshId] = {
                Name = tool:GetAttribute("DisplayName") or tool.Name,
                Rarity = tool:GetAttribute("RarityName") or "Common",
                ImageId = tool:GetAttribute("ImageId") or "rbxassetid://7072725737",
            }
        elseif tool.Name == "Fists" then
            WeaponDB["Fists"] = {
                Name = tool:GetAttribute("DisplayName") or "Fists",
                Rarity = tool:GetAttribute("RarityName") or "Common",
                ImageId = tool:GetAttribute("ImageId") or "rbxassetid://116170302967943",
            }
        else
            WeaponDB[tool.Name] = {
                Name = tool:GetAttribute("DisplayName") or tool.Name,
                Rarity = tool:GetAttribute("RarityName") or "Common",
                ImageId = tool:GetAttribute("ImageId") or "rbxassetid://7072725737",
            }
        end
    end
end

-- ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÜ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
for _, category in ipairs({"gun", "melee", "throwable", "consumable", "farming", "misc", "rod", "fish"}) do
    registerItems(ReplicatedStorage:WaitForChild("Items")[category])
end

local function getMeshId(tool)
    local handle = tool:FindFirstChild("Handle")
    if not handle then return nil end
    local mesh = handle:FindFirstChildOfClass("SpecialMesh")
    if mesh then return mesh.MeshId end
    if handle:IsA("MeshPart") then return handle.MeshId end
    return nil
end

local function getWeaponInfo(tool)
    local meshId = getMeshId(tool)
    if meshId and WeaponDB[meshId] then
        return WeaponDB[meshId]
    elseif tool.Name == "Fists" and WeaponDB["Fists"] then
        return WeaponDB["Fists"]
    elseif WeaponDB[tool.Name] then
        return WeaponDB[tool.Name]
    else
        return {
            Name = "‡∏´‡∏°‡∏±‡∏î",
            Rarity = "Common",
            ImageId = "rbxassetid://116170302967943"
        }
    end
end

local function getHighestRarity(tools)
    local order = {Common=1, Uncommon=2, Rare=3, Epic=4, Legendary=5, Omega=6}
    local max = "Common"
    for _, tool in ipairs(tools) do
        local info = getWeaponInfo(tool)
        if order[info.Rarity] and order[info.Rarity] > order[max] then
            max = info.Rarity
        end
    end
    return max
end

-- üñºÔ∏è GUI
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local ScreenGui = Instance.new("ScreenGui", PlayerGui)
ScreenGui.Name = "InventoryViewerGUI"

local listFrame = Instance.new("Frame", ScreenGui)
listFrame.Size = UDim2.new(0, 180, 0.4, 0)
listFrame.Position = UDim2.new(0, 10, 0.3, 0)
listFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
listFrame.BackgroundTransparency = 0.2
Instance.new("UICorner", listFrame).CornerRadius = UDim.new(0, 8)

local playerList = Instance.new("ScrollingFrame", listFrame)
playerList.Size = UDim2.new(1, -10, 1, -50)
playerList.Position = UDim2.new(0, 5, 0, 5)
playerList.BackgroundTransparency = 1
playerList.ScrollBarThickness = 6
playerList.AutomaticCanvasSize = Enum.AutomaticSize.Y
Instance.new("UIListLayout", playerList).Padding = UDim.new(0, 4)

local resetButton = Instance.new("TextButton", listFrame)
resetButton.Size = UDim2.new(1, -10, 0, 30)
resetButton.Position = UDim2.new(0, 5, 1, -35)
resetButton.Text = "beta"
resetButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
resetButton.TextColor3 = Color3.new(1, 1, 1)
resetButton.Font = Enum.Font.GothamBold
resetButton.TextScaled = true
Instance.new("UICorner", resetButton).CornerRadius = UDim.new(0, 6)

local invFrame = Instance.new("Frame", ScreenGui)
invFrame.Size = UDim2.new(0, 350, 0, 300)
invFrame.Position = UDim2.new(0, 200, 0.3, 0)
invFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
invFrame.BackgroundTransparency = 0.2
invFrame.Visible = false
Instance.new("UICorner", invFrame).CornerRadius = UDim.new(0, 8)

local invTitle = Instance.new("TextLabel", invFrame)
invTitle.Size = UDim2.new(1, -40, 0, 30)
invTitle.Position = UDim2.new(0, 5, 0, 0)
invTitle.BackgroundTransparency = 1
invTitle.TextColor3 = Color3.new(1, 1, 1)
invTitle.Font = Enum.Font.GothamBold
invTitle.TextScaled = true
invTitle.TextXAlignment = Enum.TextXAlignment.Left

local closeButton = Instance.new("TextButton", invFrame)
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 0)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(120, 30, 30)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextScaled = true
Instance.new("UICorner", closeButton).CornerRadius = UDim.new(0, 6)

local invList = Instance.new("ScrollingFrame", invFrame)
invList.Position = UDim2.new(0, 10, 0, 40)
invList.Size = UDim2.new(1, -20, 1, -50)
invList.BackgroundTransparency = 1
invList.ScrollBarThickness = 6
invList.AutomaticCanvasSize = Enum.AutomaticSize.Y
Instance.new("UIListLayout", invList).Padding = UDim.new(0, 5)

closeButton.MouseButton1Click:Connect(function()
    invFrame.Visible = false
end)

local playerButtons = {}
local BillboardCache = {}

local function createBillboardForPlayer(player)
    if player == LocalPlayer then return end
    local char = player.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    if BillboardCache[player] then
        BillboardCache[player]:Destroy()
    end

    local billboard = Instance.new("BillboardGui")
    billboard.Adornee = hrp
    billboard.Size = UDim2.new(0, 150, 0, 30)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = char

    billboard:ClearAllChildren()

    local tools = {}
    for _, container in ipairs({"Backpack", "StarterGear", "StarterPack"}) do
        local obj = player:FindFirstChild(container)
        if obj then
            for _, tool in ipairs(obj:GetChildren()) do
                if tool:IsA("Tool") then table.insert(tools, tool) end
            end
        end
    end
    if player.Character then
        for _, tool in ipairs(player.Character:GetChildren()) do
            if tool:IsA("Tool") then table.insert(tools, tool) end
        end
    end

    local padding = 8
    local imageSize = 28
    local layout = Instance.new("UIListLayout", billboard)
    layout.FillDirection = Enum.FillDirection.Horizontal
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, padding)
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    for i, tool in ipairs(tools) do
        local info = getWeaponInfo(tool)
        
        -- ‡∏Ç‡πâ‡∏≤‡∏°‡∏ñ‡πâ‡∏≤ Rarity = "Common"
        if info.Rarity ~= "Common" then
            local img = Instance.new("ImageLabel", billboard)
            img.Size = UDim2.new(0, imageSize, 0, imageSize)
            img.BackgroundTransparency = 1
            img.Image = info.ImageId
            img.LayoutOrder = i

            local uicorner = Instance.new("UICorner", img)
            uicorner.CornerRadius = UDim.new(0, 15)

            local border = Instance.new("Frame", img)
            border.Size = UDim2.new(1, 6, 1, 6)
            border.Position = UDim2.new(0, -3, 0, -3)
            border.ZIndex = img.ZIndex - 1
            border.BackgroundColor3 = RARITY_COLORS[info.Rarity] or Color3.new(1, 1, 1)
            border.AnchorPoint = Vector2.new(0, 0)
            border.ClipsDescendants = true
            local borderCorner = Instance.new("UICorner", border)
            borderCorner.CornerRadius = UDim.new(0, 8.5)
        end
    end

    BillboardCache[player] = billboard
end

local function showInventory(player)
    invTitle.Text = "Inventory: " .. player.Name
    invFrame.Visible = true

    for _, c in ipairs(invList:GetChildren()) do
        if not c:IsA("UIListLayout") then
            c:Destroy()
        end
    end

    local tools = {}
    for _, container in ipairs({"Backpack", "StarterGear", "StarterPack"}) do
        local obj = player:FindFirstChild(container)
        if obj then
            for _, tool in ipairs(obj:GetChildren()) do
                if tool:IsA("Tool") then table.insert(tools, tool) end
            end
        end
    end
    if player.Character then
        for _, tool in ipairs(player.Character:GetChildren()) do
            if tool:IsA("Tool") then table.insert(tools, tool) end
        end
    end

    for _, tool in ipairs(tools) do
        local info = getWeaponInfo(tool)

        local frame = Instance.new("Frame", invList)
        frame.Size = UDim2.new(1, -10, 0, 60)
        frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        frame.BorderSizePixel = 0

        local img = Instance.new("ImageLabel", frame)
        img.Size = UDim2.new(0, 50, 0, 50)
        img.Position = UDim2.new(0, 5, 0, 5)
        img.Image = info.ImageId
        img.BackgroundTransparency = 1

        local name = Instance.new("TextLabel", frame)
        name.Size = UDim2.new(1, -60, 0.5, 0)
        name.Position = UDim2.new(0, 60, 0, 5)
        name.TextColor3 = RARITY_COLORS[info.Rarity] or Color3.new(1,1,1)
        name.Text = info.Name
        name.Font = Enum.Font.GothamBold
        name.TextSize = 20
        name.TextXAlignment = Enum.TextXAlignment.Left
        name.BackgroundTransparency = 1

        local rarity = Instance.new("TextLabel", frame)
        rarity.Size = UDim2.new(1, -60, 0.5, 0)
        rarity.Position = UDim2.new(0, 60, 0.5, 0)
        rarity.TextColor3 = RARITY_COLORS[info.Rarity] or Color3.new(1,1,1)
        rarity.Text = info.Rarity
        rarity.Font = Enum.Font.Gotham
        rarity.TextSize = 16
        rarity.TextXAlignment = Enum.TextXAlignment.Left
        rarity.BackgroundTransparency = 1
    end
end

local function createPlayerButton(player)
    local tools = {}
    for _, container in ipairs({"Backpack", "StarterGear", "StarterPack"}) do
        local obj = player:FindFirstChild(container)
        if obj then
            for _, tool in ipairs(obj:GetChildren()) do
                if tool:IsA("Tool") then table.insert(tools, tool) end
            end
        end
    end
    if player.Character then
        for _, tool in ipairs(player.Character:GetChildren()) do
            if tool:IsA("Tool") then table.insert(tools, tool) end
        end
    end

    local button = Instance.new("TextButton", playerList)
    button.Size = UDim2.new(1, -10, 0, 28)
    button.Text = player.Name
    button.TextScaled = true
    button.Font = Enum.Font.GothamBold
    button.BackgroundColor3 = RARITY_COLORS[getHighestRarity(tools)] or Color3.fromRGB(40, 40, 40)
    button.TextColor3 = Color3.new(1, 1, 1)
    Instance.new("UICorner", button).CornerRadius = UDim.new(0, 6)

    button.MouseButton1Click:Connect(function()
        showInventory(player)
    end)

    createBillboardForPlayer(player)

    playerButtons[player] = button
end

local function refreshPlayerList()
    for _, child in ipairs(playerList:GetChildren()) do
        if child:IsA("TextButton") then child:Destroy() end
    end
    playerButtons = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            createPlayerButton(p)
        end
    end
end

resetButton.MouseButton1Click:Connect(refreshPlayerList)
Players.PlayerAdded:Connect(function(p) if p ~= LocalPlayer then createPlayerButton(p) end end)
Players.PlayerRemoving:Connect(function(p)
    if playerButtons[p] then
        playerButtons[p]:Destroy()
        playerButtons[p] = nil
    end
    if BillboardCache[p] then
        BillboardCache[p]:Destroy()
        BillboardCache[p] = nil
    end
end)

refreshPlayerList()

RunService.Heartbeat:Connect(function()
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            createBillboardForPlayer(p)
        end
    end
end)
